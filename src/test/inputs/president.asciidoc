This is a regression test for https://github.com/danvk/literate-ts/issues/137

To conditionally add a property in a type-safe way, you can use spread syntax with `null` or `{}`, which add no properties:

[source,ts]
----
declare let hasMiddle: boolean;
const firstLast = {first: 'Harry', last: 'Truman'};
const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};
//    ^? const president: {
//         first: string;
//         last: string;
//         middle?: string;
//       }
----

Here's the same with a "type is"-style assertion:

[source,ts]
----
declare let hasMiddle: boolean;
const firstLast = {first: 'Harry', last: 'Truman'};
const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};
// Type is { first: string; last: string; middle?: string; }
----
