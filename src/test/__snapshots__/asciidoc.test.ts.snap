// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`checker asciidoc checker snapshots "./src/test/inputs/commented-sample-with-error.asciidoc": ./src/test/inputs/commented-sample-with-error.asciidoc 1`] = `
{
  "logs": [
    "---- BEGIN FILE ./src/test/inputs/commented-sample-with-error.asciidoc
",
    "Found 2 code samples in ./src/test/inputs/commented-sample-with-error.asciidoc",
    "BEGIN #././src/test/inputs/commented-sample-with-error.asciidoc:7 (id for --filter: commented-sample-with-error-7)
",
    "ðŸ’¥ ./src/test/inputs/commented-sample-with-error.asciidoc:7:7-12: Unexpected TypeScript error: Type 'string' is not assignable to type 'number'.",
    "const value: number = "123";",
    "tsconfig options: {"strictNullChecks":true,"module":1}",
    "
END #././src/test/inputs/commented-sample-with-error.asciidoc:7 (--- ms)
",
    "BEGIN #././src/test/inputs/commented-sample-with-error.asciidoc:17 (id for --filter: commented-sample-with-error-17)
",
    "ðŸ’¥ ././src/test/inputs/commented-sample-with-error.asciidoc:17: Unexpected TypeScript error: Type 'string' is not assignable to type 'number'.",
    "const value: number = "123";
console.log(value);
//          ^? const value: number",
    "tsconfig options: {"strictNullChecks":true,"module":1}",
    "
END #././src/test/inputs/commented-sample-with-error.asciidoc:17 (--- ms)
",
    "---- END FILE ./src/test/inputs/commented-sample-with-error.asciidoc
",
  ],
  "statuses": [
    "1/1: ././src/test/inputs/commented-sample-with-error.asciidoc",
    "1/1: ././src/test/inputs/commented-sample-with-error.asciidoc: 1/2 ././src/test/inputs/commented-sample-with-error.asciidoc:7",
    "1/1: ././src/test/inputs/commented-sample-with-error.asciidoc: 2/2 ././src/test/inputs/commented-sample-with-error.asciidoc:17",
  ],
}
`;

exports[`checker asciidoc checker snapshots "./src/test/inputs/president.asciidoc": ./src/test/inputs/president.asciidoc 1`] = `
{
  "logs": [
    "---- BEGIN FILE ./src/test/inputs/president.asciidoc
",
    "Found 2 code samples in ./src/test/inputs/president.asciidoc",
    "BEGIN #././src/test/inputs/president.asciidoc:7 (id for --filter: president-7)
",
    "Code passed type checker.",
    "ðŸ’¥ ./src/test/inputs/president.asciidoc:9:7-16: Failed type assertion for \`president\`
  Expected: const president: { first: string; last: string; middle?: string; }
    Actual: const president: {
    middle?: string | undefined;
    first: string;
    last: string;
}",
    "  0/1 twoslash type assertions matched.",
    "declare let hasMiddle: boolean;
const firstLast = {first: 'Harry', last: 'Truman'};
const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};
//    ^? const president: {
//         first: string;
//         last: string;
//         middle?: string;
//       }",
    "tsconfig options: {"strictNullChecks":true,"module":1}",
    "
END #././src/test/inputs/president.asciidoc:7 (--- ms)
",
    "BEGIN #././src/test/inputs/president.asciidoc:21 (id for --filter: president-21)
",
    "Code passed type checker.",
    "ðŸ’¥ ./src/test/inputs/president.asciidoc:23:7-16: Failed type assertion for \`const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};\` (tested \`president\`)
  Expected: { first: string; last: string; middle?: string; }
    Actual: { middle?: string | undefined; first: string; last: string; }",
    "  0/1 type assertions matched.",
    "declare let hasMiddle: boolean;
const firstLast = {first: 'Harry', last: 'Truman'};
const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};
// Type is { first: string; last: string; middle?: string; }",
    "tsconfig options: {"strictNullChecks":true,"module":1}",
    "
END #././src/test/inputs/president.asciidoc:21 (--- ms)
",
    "---- END FILE ./src/test/inputs/president.asciidoc
",
  ],
  "statuses": [
    "1/1: ././src/test/inputs/president.asciidoc",
    "1/1: ././src/test/inputs/president.asciidoc: 1/2 ././src/test/inputs/president.asciidoc:7",
    "1/1: ././src/test/inputs/president.asciidoc: 2/2 ././src/test/inputs/president.asciidoc:21",
  ],
}
`;

exports[`extractSamples snapshot: backticks 1`] = `
[
  {
    "checkJS": false,
    "content": "function greet(who: string) {
  console.log('Hello', who);
}",
    "descriptor": "./backticks.asciidoc:3",
    "id": "greet-ts",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 4,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "backticks.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "export const Example = () => <div />;",
    "descriptor": "./backticks.asciidoc:12",
    "id": "greet-tsx",
    "isTSX": false,
    "language": "tsx",
    "lineNumber": 13,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "backticks.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "console.log("end of file");",
    "descriptor": "./backticks.asciidoc:27",
    "id": "backticks-27",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 26,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "backticks.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: backticks-disabled 1`] = `[]`;

exports[`extractSamples snapshot: commented-sample 1`] = `
[
  {
    "checkJS": false,
    "content": "function somethingDangerous() {}",
    "descriptor": "./commented-sample.asciidoc:7",
    "id": "commented-sample-7",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 6,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "commented-sample.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "let val = null;  // Type is any
try {
  somethingDangerous();
  val = 12;
  val  // Type is number
} catch (e) {
  console.warn('alas!');
}
val  // Type is number | null",
    "descriptor": "./commented-sample.asciidoc:13",
    "id": "commented-sample-13",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 12,
    "nodeModules": [],
    "prefixes": [
      {
        "id": "commented-sample-7",
      },
    ],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "commented-sample.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: commented-sample-with-error 1`] = `
[
  {
    "checkJS": false,
    "content": "const value: number = "123";",
    "descriptor": "./commented-sample-with-error.asciidoc:7",
    "id": "commented-sample-with-error-7",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 6,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "commented-sample-with-error.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "console.log(value);
//          ^? const value: number",
    "descriptor": "./commented-sample-with-error.asciidoc:17",
    "id": "commented-sample-with-error-17",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 16,
    "nodeModules": [],
    "prefixes": [
      {
        "id": "commented-sample-with-error-7",
      },
    ],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "commented-sample-with-error.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: doc1 1`] = `
[
  {
    "checkJS": false,
    "content": "function greet(who: string) {
  console.log('Hello', who);
}",
    "descriptor": "./doc1.asciidoc:3",
    "id": "greet-ts",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 5,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "doc1.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: inline-replacement 1`] = `
[
  {
    "checkJS": false,
    "content": "function calculateAge(birthDate: Date): number {
  // ...
}",
    "descriptor": "./inline-replacement.asciidoc:6",
    "id": "inline-replacement-6",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 5,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": "calculate-age-replacement",
    "sectionHeader": null,
    "sourceFile": "inline-replacement.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "function calculateAge(birthDate: Date): number {
  // COMPRESS
  return 0;
  // END
}",
    "descriptor": "./inline-replacement.asciidoc:12",
    "id": "calculate-age-replacement",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 14,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "inline-replacement.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "function calculateAge(birthDate: string): number {
  // ...
}",
    "descriptor": "./inline-replacement.asciidoc:28",
    "id": "inline-replacement-28",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 27,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": "calculate-age-replacement",
    "sectionHeader": null,
    "sourceFile": "inline-replacement.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: multilinetype 1`] = `
[
  {
    "checkJS": false,
    "content": "const o = {x: 1, y: 2};
// type is {
//   x: number;
//   y: number;
// }",
    "descriptor": "./multilinetype.asciidoc:4",
    "id": "multilinetype-4",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 3,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "multilinetype.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "function addWithExtras(a: number, b: number) {
  const c = a + b;  // type is number
  // ...
  return c;
}",
    "descriptor": "./multilinetype.asciidoc:14",
    "id": "multilinetype-14",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 13,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "multilinetype.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: noid 1`] = `
[
  {
    "checkJS": false,
    "content": "console.log('Hello', 'TS');",
    "descriptor": "./noid.asciidoc:10",
    "id": "noid-10",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 9,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "noid.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: prepend 1`] = `
[
  {
    "checkJS": false,
    "content": "type AB = 'a' | 'b';",
    "descriptor": "./prepend.asciidoc:2",
    "id": "prefix",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 4,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "prepend.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "const a: AB = 'a';",
    "descriptor": "./prepend.asciidoc:8",
    "id": "combined",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 10,
    "nodeModules": [],
    "prefixes": [
      {
        "id": "prefix",
      },
    ],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "prepend.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "const a: AB = 'a';",
    "descriptor": "./prepend.asciidoc:16",
    "id": "final",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 18,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "prepend.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: prepend-multiple 1`] = `
[
  {
    "checkJS": false,
    "content": "type AB = 'a' | 'b';",
    "descriptor": "./prepend-multiple.asciidoc:4",
    "id": "prepend-multiple-4",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 3,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "prepend-multiple.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "type ABC = AB | 'c';",
    "descriptor": "./prepend-multiple.asciidoc:10",
    "id": "prepend-multiple-10",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 9,
    "nodeModules": [],
    "prefixes": [
      {
        "id": "prepend-multiple-4",
      },
    ],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "prepend-multiple.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "const c: ABC = 'c';",
    "descriptor": "./prepend-multiple.asciidoc:15",
    "id": "prepend-multiple-15",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 14,
    "nodeModules": [],
    "prefixes": [
      {
        "id": "prepend-multiple-4",
      },
      {
        "id": "prepend-multiple-10",
      },
    ],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "prepend-multiple.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: president 1`] = `
[
  {
    "checkJS": false,
    "content": "declare let hasMiddle: boolean;
const firstLast = {first: 'Harry', last: 'Truman'};
const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};
//    ^? const president: {
//         first: string;
//         last: string;
//         middle?: string;
//       }",
    "descriptor": "./president.asciidoc:7",
    "id": "president-7",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 6,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "president.asciidoc",
    "tsOptions": {},
  },
  {
    "checkJS": false,
    "content": "declare let hasMiddle: boolean;
const firstLast = {first: 'Harry', last: 'Truman'};
const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};
// Type is { first: string; last: string; middle?: string; }",
    "descriptor": "./president.asciidoc:21",
    "id": "president-21",
    "isTSX": false,
    "language": "ts",
    "lineNumber": 20,
    "nodeModules": [],
    "prefixes": [],
    "prefixesLength": 0,
    "replacementId": undefined,
    "sectionHeader": null,
    "sourceFile": "president.asciidoc",
    "tsOptions": {},
  },
]
`;

exports[`extractSamples snapshot: skip 1`] = `[]`;
