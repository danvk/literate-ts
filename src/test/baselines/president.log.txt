---- BEGIN FILE ./src/test/inputs/president.asciidoc

Found 2 code samples in ./src/test/inputs/president.asciidoc
BEGIN #././src/test/inputs/president.asciidoc:7 (--filter president-7)

Code passed type checker.
ðŸ’¥ ./src/test/inputs/president.asciidoc:9:7-16: Failed type assertion for `president`
  Expected: const president: { first: string; last: string; middle?: string; }
    Actual: const president: {
    middle?: string | undefined;
    first: string;
    last: string;
}
  0/1 twoslash type assertions matched.
declare let hasMiddle: boolean;
const firstLast = {first: 'Harry', last: 'Truman'};
const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};
//    ^? const president: {
//         first: string;
//         last: string;
//         middle?: string;
//       }
tsconfig options: {"strictNullChecks":true,"module":1,"esModuleInterop":true}

END #././src/test/inputs/president.asciidoc:7 (--- ms)

BEGIN #././src/test/inputs/president.asciidoc:21 (--filter president-21)

Code passed type checker.
ðŸ’¥ ./src/test/inputs/president.asciidoc:23:7-16: Failed type assertion for `const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};` (tested `president`)
  Expected: { first: string; last: string; middle?: string; }
    Actual: { middle?: string | undefined; first: string; last: string; }
  0/1 type assertions matched.
declare let hasMiddle: boolean;
const firstLast = {first: 'Harry', last: 'Truman'};
const president = {...firstLast, ...(hasMiddle ? {middle: 'S'} : {})};
// Type is { first: string; last: string; middle?: string; }
tsconfig options: {"strictNullChecks":true,"module":1,"esModuleInterop":true}

END #././src/test/inputs/president.asciidoc:21 (--- ms)

---- END FILE ./src/test/inputs/president.asciidoc

