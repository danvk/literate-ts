- descriptor: ./equivalent.asciidoc:8
  id: equivalent-8
  sectionHeader: null
  language: ts
  content: |-
    interface Point {
      x: number;
      y: number;
    }

    type T = keyof Point;
    //   ^? type T = keyof Point
  prefixes: []
  nodeModules: []
  isTSX: false
  checkJS: false
  sourceFile: equivalent.asciidoc
  lineNumber: 7
  targetFilename: null
  tsOptions: {}
  prefixesLength: 0
  skip: false
  auxiliaryFiles: []
  inCommentBlock: false
- descriptor: ./equivalent.asciidoc:23
  id: equivalent-23
  sectionHeader: null
  language: ts
  content: |-
    type T2 = keyof Point;
    //   ^? type T2 = keyof Point (equivalent to "x" | "y")
  prefixes:
    - id: equivalent-8
  nodeModules: []
  isTSX: false
  checkJS: false
  sourceFile: equivalent.asciidoc
  lineNumber: 22
  targetFilename: null
  tsOptions: {}
  prefixesLength: 0
  skip: false
  auxiliaryFiles: []
  inCommentBlock: false
- descriptor: ./equivalent.asciidoc:31
  id: equivalent-31
  sectionHeader: null
  language: ts
  content: |-
    type T2 = keyof Point;
    //   ^? type T2 = keyof Point (equivalent to "x" | "y" | "z")
  prefixes:
    - id: equivalent-8
  nodeModules: []
  isTSX: false
  checkJS: false
  sourceFile: equivalent.asciidoc
  lineNumber: 30
  targetFilename: null
  tsOptions: {}
  prefixesLength: 0
  skip: false
  auxiliaryFiles: []
  inCommentBlock: false
- descriptor: ./equivalent.asciidoc:39
  id: equivalent-39
  sectionHeader: null
  language: ts
  content: |-
    type T2 = keyof Point;
    //   ^? type T2 = keyof Point
    //      (equivalent to "x" | "y" | "z")
  prefixes:
    - id: equivalent-8
  nodeModules: []
  isTSX: false
  checkJS: false
  sourceFile: equivalent.asciidoc
  lineNumber: 38
  targetFilename: null
  tsOptions: {}
  prefixesLength: 0
  skip: false
  auxiliaryFiles: []
  inCommentBlock: false
- descriptor: ./equivalent.asciidoc:48
  id: equivalent-48
  sectionHeader: null
  language: ts
  content: |-
    function foo(pt: Point) {
      let k: keyof Point;
      for (k in pt) {
        // ^? let k: keyof Point (equivalent to "x" | "y")
      }
    }
  prefixes:
    - id: equivalent-8
  nodeModules: []
  isTSX: false
  checkJS: false
  sourceFile: equivalent.asciidoc
  lineNumber: 47
  targetFilename: null
  tsOptions: {}
  prefixesLength: 0
  skip: false
  auxiliaryFiles: []
  inCommentBlock: false
- descriptor: ./equivalent.asciidoc:60
  id: equivalent-60
  sectionHeader: null
  language: ts
  content: |-
    function foo(pt: Point) {
      let k: keyof Point;
      for (k in pt) {
        // ^? let k: keyof Point (equivalent to "x" | "y" | "z")
      }
    }
  prefixes:
    - id: equivalent-8
  nodeModules: []
  isTSX: false
  checkJS: false
  sourceFile: equivalent.asciidoc
  lineNumber: 59
  targetFilename: null
  tsOptions: {}
  prefixesLength: 0
  skip: false
  auxiliaryFiles: []
  inCommentBlock: false
